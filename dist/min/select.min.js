'use strict'
function combine (n, r) {
  var t = void 0
  for (n = n.concat([]); (t = n.indexOf(void 0)) !== -1 && r.length > 0;) { n[t] = r.shift() }
  return n.concat(r)
}
function array (n) {
  return Array.prototype.slice.call(n, 0)
}
function empty (n) {
  return void 0 === n || n === null
}
function curry (n) {
  function r (t) {
    function e () {
      for (var n = arguments.length, r = Array(n), e = 0; e < n; e++) { r[e] = arguments[e] }
      return c = combine(t, array(arguments)), o = f(this), a(c)
    }
    var c,
      o,
      i = function () {
        return n.apply(o, c)
      },
      f = function (n) {
        return o || n
      },
      a = function (n) {
        return u(n) ? i() : r(n)
      }
    return e
  }
  var t = function (r) {
      return r.length < n.length
    },
    e = function (n) {
      return n.some(empty)
    },
    u = function (n) {
      return t(n) && !e(n)
    }
  return n.length <= 1 ? n : r([])
}
function where (n, r) {
  var t,
    e = function (t) {
      return n[t] === r[t]
    }
  return t = Object.keys(n), t.every(e)
}
function select () {
  function n (n, r) {
    return f.indexOf(r) !== -1 ? n[r] : [ n[r] ]
  }
  function r (r) {
    for (var t in r) { r[t] = n(r, t) }
    return r
  }
  function t (n) {
    return isArray(n) ? n : [ r(n) ]
  }
  function e (n) {
    var r,
      t = function (t) {
        r[t] = n[t]
      }
    return r = {}, f.forEach(t), r
  }
  function u (n, r) {
    var t,
      e = function (r) {
        n[r] = n[r] || []
      },
      u = function (t) {
        n[t] = n[t].concat(r[t])
      },
      c = function (n) {
        return f.indexOf(n) === -1
      }
    return (t = Object.keys(r).filter(c)).forEach(e), t.forEach(u), n
  }
  function c (n, r) {
    var t, c, o
    return c = e(r), o = _where(c), t = n.findIndex(o), t !== -1
      ? n[t] = u(n[t], r)
      : n.push(r), n
  }
  function o (n, e) {
    var u, o
    return u = t(n), o = r(e), u = c(u, o)
  }
  for (var i = arguments.length, f = Array(i), a = 0; a < i; a++) { f[a] = arguments[a] }
  return o
}
var _where = curry(where),
  isArray = function (n) {
    return n instanceof Array
  }
module.exports = select
// # sourceMappingURL=../map/select.min.js.map
