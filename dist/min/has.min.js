'use strict'
function combine (n, r) {
  var t = void 0
  for (n = n.concat([]); (t = n.indexOf(void 0)) !== -1 && r.length > 0;) { n[t] = r.shift() }
  return n.concat(r)
}
function array (n) {
  return Array.prototype.slice.call(n, 0)
}
function empty (n) {
  return void 0 === n || n === null
}
function curry (n) {
  function r (t) {
    function u () {
      for (var n = arguments.length, r = Array(n), u = 0; u < n; u++) { r[u] = arguments[u] }
      return o = combine(t, array(arguments)), c = a(this), f(o)
    }
    var o,
      c,
      i = function () {
        return n.apply(c, o)
      },
      a = function (n) {
        return c || n
      },
      f = function (n) {
        return e(n) ? i() : r(n)
      }
    return u
  }
  var t = function (r) {
      return r.length < n.length
    },
    u = function (n) {
      return n.some(empty)
    },
    e = function (n) {
      return t(n) && !u(n)
    }
  return n.length <= 1 ? n : r([])
}
var has = curry(function (n, r) {
  return n.hasOwnProperty(r)
})
module.exports = has
// # sourceMappingURL=../map/has.min.js.map
