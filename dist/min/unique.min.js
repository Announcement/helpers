'use strict'
function combine (r, n) {
  var e = void 0
  for (r = r.concat([]); (e = r.indexOf(void 0)) !== -1 && n.length > 0;) { r[e] = n.shift() }
  return r.concat(n)
}
function array (r) {
  return Array.prototype.slice.call(r, 0)
}
function empty (r) {
  return void 0 === r || r === null
}
function curry (r) {
  function n (e) {
    function t () {
      for (var r = arguments.length, n = Array(r), t = 0; t < r; t++) { n[t] = arguments[t] }
      return o = combine(e, array(arguments)), c = f(this), a(o)
    }
    var o,
      c,
      i = function () {
        return r.apply(c, o)
      },
      f = function (r) {
        return c || r
      },
      a = function (r) {
        return u(r) ? i() : n(r)
      }
    return t
  }
  var e = function (n) {
      return n.length < r.length
    },
    t = function (r) {
      return r.some(empty)
    },
    u = function (r) {
      return e(r) && !t(r)
    }
  return r.length <= 1 ? r : n([])
}
function where (r, n) {
  var e,
    t = function (e) {
      return r[e] === n[e]
    }
  return e = Object.keys(r), e.every(t)
}
function beforeReduce (r) {
  return r instanceof Array ? r : [ r ]
}
var _where = curry(where),
  unique = {
    normal: curry(function (r, n) {
      return r.filter(_where(n)).length > 1
    }),
    filter: function (r, n, e) {
      return e.indexOf(r, n + 1) === -1
    },
    reduce: function (r, n) {
      return (r = beforeReduce(r)).find(_where(n)) || r.push(n), r
    }
  }
module.exports = unique
// # sourceMappingURL=../map/unique.min.js.map
