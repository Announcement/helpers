'use strict'
function combine (r, n) {
  var t = void 0
  for (r = r.concat([]); (t = r.indexOf(void 0)) !== -1 && n.length > 0;) { r[t] = n.shift() }
  return r.concat(n)
}
function array (r) {
  return Array.prototype.slice.call(r, 0)
}
function empty (r) {
  return void 0 === r || r === null
}
function curry (r) {
  function n (t) {
    function e () {
      for (var r = arguments.length, n = Array(r), e = 0; e < r; e++) { n[e] = arguments[e] }
      return o = combine(t, array(arguments)), c = f(this), a(o)
    }
    var o,
      c,
      i = function () {
        return r.apply(c, o)
      },
      f = function (r) {
        return c || r
      },
      a = function (r) {
        return u(r) ? i() : n(r)
      }
    return e
  }
  var t = function (n) {
      return n.length < r.length
    },
    e = function (r) {
      return r.some(empty)
    },
    u = function (r) {
      return t(r) && !e(r)
    }
  return r.length <= 1 ? r : n([])
}
function where (r, n) {
  var t,
    e = function (t) {
      return r[t] === n[t]
    }
  return t = Object.keys(r), t.every(e)
}
var _where = curry(where)
module.exports = _where
// # sourceMappingURL=../map/where.min.js.map
