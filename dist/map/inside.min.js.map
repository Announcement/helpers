{"version":3,"sources":["inside.js"],"names":["inside","haystack","needle","toValues","object","key","isArray","it","Array","isObject","_typeof","values","Object","keys","map","areInside","insideArray","some","insideObject","array","module","exports"],"mappings":"AAAA,aAWA,SAASA,OAAQC,EAAUC,GACzB,IAAIC,EAAW,SAAAC,GAAA,OAAU,SAAAC,GAAA,OAAOD,EAAOC,KACnCC,EAAU,SAAAC,GAAA,OAAMA,aAAcC,OAC9BC,EAAW,SAAAF,GAAA,MAAoB,iBAAd,IAAOA,EAAP,YAAAG,QAAOH,KACxBI,EAAS,SAAAJ,GAAA,OAAMK,OAAOC,KAAKN,GAAIO,IAAIX,EAASI,KAE5CQ,EAAY,SAAAR,GAAA,OAAMP,OAAOO,EAAIL,IAE7Bc,EAAc,WAAA,OAAMf,EAASgB,KAAKF,IAClCG,EAAe,WAAA,OAAMP,EAAOV,GAAUgB,KAAKF,IAE3CI,EAAQ,WAAA,OAAMb,EAAQL,IAAae,KACnCZ,EAAS,WAAA,OAAMK,EAASR,IAAaiB,KAIzC,OAHc,WAAA,OAAMjB,IAAaC,MACpB,WAAA,OAAMiB,KAAWf,6NAKhCgB,OAAOC,QAAUrB","file":"../dist/inside.min.js","sourcesContent":["'use strict';\n\n/**\r\n * Detects if the needle is in the haystack.\r\n * @function inside\r\n *\r\n * @param {Object|Array} haystack - what we are looking in\r\n * @param {Object} needle - strict equal comparison compatible\r\n *\r\n * @return {Boolean} Whether or not the value could be located\r\n */\r\nfunction inside (haystack, needle) {\r\n  let toValues = object => key => object[key];\r\n  let isArray = it => it instanceof Array;\r\n  let isObject = it => typeof it === 'object';\r\n  let values = it => Object.keys(it).map(toValues(it));\r\n\r\n  let areInside = it => inside(it, needle);\r\n\r\n  let insideArray = () => haystack.some(areInside);\r\n  let insideObject = () => values(haystack).some(areInside);\r\n\r\n  let array = () => isArray(haystack) && insideArray(haystack, needle);\r\n  let object = () => isObject(haystack) && insideObject(haystack, needle);\r\n  let matches = () => haystack === needle;\r\n  let search = () => array() || object();\r\n\r\n  return matches() || search()\r\n}\n\nmodule.exports = inside;\n"]}