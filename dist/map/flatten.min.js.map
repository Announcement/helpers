{"version":3,"sources":["flatten.js"],"names":["flatten","array","isArray","toArray","fromArray","it","constructor","Array","a","b","concat","some","map","reduce","module","exports"],"mappings":"AAAA,aAWA,SAASA,QAASC,GAChB,IAAIC,OAAAA,EACAC,OAAAA,EACAC,OAAAA,EAMJ,IAJAF,EAAU,SAACG,GAAD,OAAQA,EAAGC,cAAgBC,OACrCJ,EAAU,SAACE,GAAD,OAAQH,EAAQG,GAAMA,GAAMA,IACtCD,EAAY,SAAAI,EAAAC,GAAA,OAAUD,EAAEE,OAAOD,IAExBR,EAAMU,KAAKT,IAChBD,EAAQA,EAAMW,IAAIT,GAASU,OAAOT,GAGpC,OAAOH,EAGTa,OAAOC,QAAUf","file":"../dist/flatten.min.js","sourcesContent":["'use strict';\n\n/**\r\n * Recursively brings arrays to the highest level\r\n *\r\n * @function flatten\r\n *\r\n * @param {Array.<Array>} array - container of the set\r\n *\r\n * @return Array\r\n */\r\nfunction flatten (array) {\r\n  let isArray;\r\n  let toArray;\r\n  let fromArray;\r\n\r\n  isArray = (it) => it.constructor === Array;\r\n  toArray = (it) => isArray(it) ? it : [it];\r\n  fromArray = (a, b) => a.concat(b);\r\n\r\n  while (array.some(isArray)) {\r\n    array = array.map(toArray).reduce(fromArray);\r\n  }\r\n\r\n  return array\r\n}\n\nmodule.exports = flatten;\n"]}