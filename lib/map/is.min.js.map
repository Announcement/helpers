{"version":3,"sources":["is.js"],"names":["_equals","require","_exists","_prepare","_inside","element","it","nodeType","document","ELEMENT_NODE","fragment","DOCUMENT_FRAGMENT_NODE","text","TEXT_NODE","is","_prepare2","default","inside","equal","existent"],"mappings":"gPAAA,IAAAA,QAAAC,QAAA,qDACAC,QAAAD,QAAA,qDACAE,SAAAF,QAAA,wDACAG,QAAAH,QAAA,qDAEA,IAAII,QAAUC,GACZA,EAAGC,WAAaC,SAASC,aAEvBC,SAAWJ,GACbA,EAAGC,WAAaC,SAASG,uBAEvBC,KAAON,GACTA,EAAGC,WAAaC,SAASK,UAEvBC,IAAK,EAAAC,UAAAC,UACPX,QAAAA,QACAK,SAAAA,SACAE,KAAAA,KACAK,OAAAA,SAAAA,QACAC,MAAAA,SAAAA,QACAC,SAAAA,SAAAA,kBAIMH,QAANF,WACAT,QAAAA,gBACAK,SAAAA,iBACAE,KAAAA,aACUM,+BACAC","file":"../lib/is.min.js","sourcesContent":["import equals from './equals'\r\nimport exists from './exists'\r\nimport prepare from './prepare'\r\nimport inside from './inside'\r\n\r\nlet element = it =>\r\n  it.nodeType === document.ELEMENT_NODE\r\n\r\nlet fragment = it =>\r\n  it.nodeType === document.DOCUMENT_FRAGMENT_NODE\r\n\r\nlet text = it =>\r\n  it.nodeType === document.TEXT_NODE\r\n\r\nlet is = prepare({\r\n  element,\r\n  fragment,\r\n  text,\r\n  inside,\r\n  equal: equals,\r\n  existent: exists\r\n})\r\n\r\nexport {\r\n  is as default,\r\n  element,\r\n  fragment,\r\n  text,\r\n  equals as equal,\r\n  exists as existent\r\n}\r\n"]}