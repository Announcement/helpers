{"version":3,"sources":["reduce.js"],"names":["reducer","previous","current","index","array","self","arguments","this","nothing","it","isStarting","isStopping","length","checkArray","Array","normalize","result","map","wrap","find","push","default"],"mappings":"aAAA,SAASA,QAASC,EAAUC,GAC1B,IAAIC,EACAC,EACAC,EAEJF,EAAQG,UAAU,GAClBF,EAAQE,UAAU,GAClBD,EAAOE,KAEP,IAAIC,EAAUC,GAAMA,EAChBC,EAAaD,GAAgB,IAAVN,EACnBQ,EAAaF,GAAML,EAAMQ,OAAST,GAAU,EAC5CU,EAAaJ,GAAMA,aAAcK,MAEjCC,EAAYN,IACd,IAAIO,EAEJA,GAAS,EACTA,EAASA,GAAUN,EAAWD,GAC9BO,EAASA,GAAUH,EAAWJ,GAE9B,OAAOO,EAASP,GAAMJ,EAAKY,IAAIR,KAOjC,OAEA,WACER,EAAWc,EAAUd,GACrBM,KAAKW,MAAQb,EAAKa,KAAMV,GAASW,KAAKX,GACtCD,KAAKU,KAAOZ,EAAKY,IAAKT,GAASW,KAAKX,MAPtCP,EAASmB,KAAKf,EAAKY,IAAIf,IAEhBS,IAAeN,EAAKa,KAAKjB,GAAYA,iEAS3BoB,QAAXrB","file":"../lib/reduce.min.js","sourcesContent":["function reducer (previous, current) {\r\n  var index\r\n  var array\r\n  var self\r\n\r\n  index = arguments[2]\r\n  array = arguments[3]\r\n  self = this\r\n\r\n  let nothing = it => it\r\n  let isStarting = it => index === 0\r\n  let isStopping = it => array.length - index === 1\r\n  let checkArray = it => it instanceof Array\r\n\r\n  let normalize = it => {\r\n    var result\r\n\r\n    result = true\r\n    result = result && isStarting(it)\r\n    result = result && checkArray(it)\r\n\r\n    return result ? it : [self.map(it)]\r\n  }\r\n\r\n  prepare()\r\n\r\n  previous.push(self.map(current))\r\n\r\n  return isStopping() ? self.wrap(previous) : previous\r\n\r\n  function prepare () {\r\n    previous = normalize(previous)\r\n    this.wrap = [self.wrap, nothing].find(nothing)\r\n    this.map = [self.map, nothing].find(nothing)\r\n  }\r\n}\r\n\r\nexport {reducer as default}\r\n"]}