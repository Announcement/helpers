{"version":3,"sources":["where.js"],"names":["_where","where","search","object","keys","result","every","key","Object","default"],"mappings":";;;;;;;AAAA;;;;;;AAEA,IAAIA,MAAJ;;AAaA,SAASC,KAAT,CAAgBC,MAAhB,EAAwBC,MAAxB,EAAgC;AAC9B,MAAIC,IAAJ;AACA,MAAIC,MAAJ;;AAEA,MAAIC,QAAQC,OAAOL,OAAOK,GAAP,MAAgBJ,OAAOI,GAAP,CAAnC;;AAEAH,SAAOI,OAAOJ,IAAP,CAAYF,MAAZ,CAAP;AACAG,WAASD,KAAKE,KAAL,CAAWA,KAAX,CAAT;;AAEA,SAAOD,MAAP;AACD;;AAED,QAEmBI,OAFnB,YAAS,qBAAMR,KAAN,CAAT;;QAEmBQ,O,GAAVT,M","file":"../where.js","sourcesContent":["import curry from './curry'\n\nvar _where\n\n/**\r\n * Verifies entry matches. Useful inside of a (filter) pipeline.\r\n *\r\n * @function where\r\n * @version 3.0.0\r\n *\r\n * @param {Object.<string, string>} search - Object with entries to match.\r\n * @param {Object.<string, string>} object - Input item to be tested.\r\n *\r\n * @returns {boolean} True if given entries are the same.\r\n */\nfunction where (search, object) {\n  var keys\n  var result\n\n  let every = key => search[key] === object[key]\n\n  keys = Object.keys(search)\n  result = keys.every(every)\n\n  return result\n}\n\n_where = curry(where)\n\nexport { _where as default }\n"]}