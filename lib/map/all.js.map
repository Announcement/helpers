{"version":3,"sources":["all.js"],"names":["allAre","methods","length","toProperty","$toProperty","toLength","toTotal","add","map","reduce","prepare","params","context","update","it","enough","from","fromPartial","fromProxy","args","result","property","object","x","y","default"],"mappings":";;;;;;;AAAA;;;;;;AAEA,SAASA,MAAT,CAAiB,GAAGC,OAApB,EAA6B;AAC3B,MAAIC,MAAJ;;AAEA,MAAIC,aAAa,qBAAMC,WAAN,CAAjB;AACA,MAAIC,WAAWF,WAAW,QAAX,CAAf;AACA,MAAIG,UAAUC,GAAd;;AAEAL,WAASD,QAAQO,GAAR,CAAYH,QAAZ,EAAsBI,MAAtB,CAA6BH,OAA7B,CAAT;;AAEA,SAAOI,QAAQ,EAAR,CAAP;;AAEA,WAASA,OAAT,CAAkBC,MAAlB,EAA0B;AACxB,QAAIC,OAAJ;;AAEA,QAAIC,SAASC,MAAMF,WAAWE,EAA9B;AACA,QAAIC,SAAS,MAAMJ,OAAOT,MAAP,GAAgBA,MAAnC;AACA,QAAIc,OAAO,MAAMC,iBAAiBC,WAAlC;;AAEA,WAAO,UAAU,GAAGC,IAAb,EAAmB;AACxB,UAAIC,MAAJ;;AAEAR,gBAAUC,OAAO,IAAP,CAAV;AACAO,eAAS,CAACL,QAAD,IAAaC,MAAtB;;AAEA,aAAOI,MAAP;AACD,KAPD;AAQD;;AAED,WAASH,WAAT,GAAwB,CAAE;AAC1B,WAASC,SAAT,GAAsB,CAAE;;AAExB,WAASd,WAAT,CAAsBiB,QAAtB,EAAgCC,MAAhC,EAAwC;AACtC,WAAOA,OAAOD,QAAP,CAAP;AACD;;AAED,WAASd,GAAT,CAAcgB,CAAd,EAAiBC,CAAjB,EAAoB;AAClB,WAAOD,IAAIC,CAAX;AACD;AACF;;QAEkBC,O,GAAVzB,M","file":"../all.js","sourcesContent":["import curry from './curry'\n\nfunction allAre (...methods) {\n  var length\n\n  let toProperty = curry($toProperty)\n  let toLength = toProperty('length')\n  let toTotal = add\n\n  length = methods.map(toLength).reduce(toTotal)\n\n  return prepare([])\n\n  function prepare (params) {\n    var context\n\n    let update = it => context || it\n    let enough = () => params.length < length\n    let from = () => fromPartial() || fromProxy()\n\n    return function (...args) {\n      var result\n\n      context = update(this)\n      result = !enough() || from()\n\n      return result\n    }\n  }\n\n  function fromPartial () {}\n  function fromProxy () {}\n\n  function $toProperty (property, object) {\n    return object[property]\n  }\n\n  function add (x, y) {\n    return x + y\n  }\n}\n\nexport { allAre as default }\n"]}