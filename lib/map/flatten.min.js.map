{"version":3,"sources":["flatten.js"],"names":["flatten","array","isArray","toArray","fromArray","it","constructor","Array","a","b","concat","some","map","reduce","default"],"mappings":"aASA,SAASA,QAASC,GAChB,IAAIC,EACAC,EACAC,EAMJ,IAJAF,EAAWG,CAAAA,GAAOA,EAAGC,cAAgBC,OACrCJ,EAAWE,CAAAA,GAAOH,EAAQG,GAAMA,GAAMA,IACtCD,EAAY,EAACI,EAAGC,IAAMD,EAAEE,OAAOD,IAExBR,EAAMU,KAAKT,IAChBD,EAAQA,EAAMW,IAAIT,GAASU,OAAOT,GAGpC,OAAOH,iEAGUa,QAAXd","file":"../lib/flatten.min.js","sourcesContent":["/**\r\n * Recursively brings arrays to the highest level\r\n *\r\n * @function flatten\r\n *\r\n * @param {Array.<Array>} array - container of the set\r\n *\r\n * @return Array\r\n */\r\nfunction flatten (array) {\r\n  let isArray\r\n  let toArray\r\n  let fromArray\r\n\r\n  isArray = (it) => it.constructor === Array\r\n  toArray = (it) => isArray(it) ? it : [it]\r\n  fromArray = (a, b) => a.concat(b)\r\n\r\n  while (array.some(isArray)) {\r\n    array = array.map(toArray).reduce(fromArray)\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nexport {flatten as default}\r\n"]}