{"version":3,"sources":["Compare.js"],"names":["Compare","constructor","reference","polarity","not","isElement","object","Element","isFragment","DocumentFragment","isText","Text","isEqual","isExistant","element","fragment","text","equal","it","existant"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEe,MAAMA,OAAN,CAAc;AAC3BC,cAAaC,SAAb,EAAwBC,WAAW,IAAnC,EAAyC;AACvC,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACD;;AAED,MAAIC,GAAJ,GAAW;AACT,WAAO,IAAIJ,OAAJ,CAAY,KAAKE,SAAjB,EAA4B,CAAC,KAAKC,QAAlC,CAAP;AACD;;AAED,SAAOE,SAAP,CAAkBC,MAAlB,EAA0B;AACxB,WAAOA,kBAAkBC,OAAzB;AACD;;AAED,SAAOC,UAAP,CAAmBF,MAAnB,EAA2B;AACzB,WAAOA,OAAOL,WAAP,KAAuBQ,gBAA9B;AACD;;AAED,SAAOC,MAAP,CAAeJ,MAAf,EAAuB;AACrB,WAAOA,OAAOL,WAAP,KAAuBU,IAA9B;AACD;;AAED,SAAOC,OAAP,CAAgBV,SAAhB,EAA2BI,MAA3B,EAAmC;AACjC,WAAO,sBAAOJ,SAAP,EAAkBI,MAAlB,CAAP;AACD;;AAED,SAAOO,UAAP,CAAmBP,MAAnB,EAA2B;AACzB,WAAO,sBAAOA,MAAP,CAAP;AACD;;AAEDQ,YAAW;AACT,WAAOd,QAAQK,SAAR,CAAkB,KAAKH,SAAvB,CAAP;AACD;;AAEDa,aAAY;AACV,WAAOf,QAAQQ,UAAR,CAAmB,KAAKN,SAAxB,CAAP;AACD;;AAEDc,SAAQ;AACN,WAAOhB,QAAQU,MAAR,CAAe,KAAKR,SAApB,CAAP;AACD;;AAEDe,QAAOC,EAAP,EAAW;AACT,WAAOlB,QAAQY,OAAR,CAAgB,KAAKV,SAArB,EAAgCgB,EAAhC,CAAP;AACD;;AAEDC,aAAY;AACV,WAAOnB,QAAQa,UAAR,CAAmB,KAAKX,SAAxB,CAAP;AACD;AAhD0B;kBAARF,O","file":"../Compare.js","sourcesContent":["import equals from './equals'\nimport exists from './exists'\n\nexport default class Compare {\n  constructor (reference, polarity = true) {\n    this.reference = reference\n    this.polarity = polarity\n  }\n\n  get not () {\n    return new Compare(this.reference, !this.polarity)\n  }\n\n  static isElement (object) {\n    return object instanceof Element\n  }\n\n  static isFragment (object) {\n    return object.constructor === DocumentFragment\n  }\n\n  static isText (object) {\n    return object.constructor === Text\n  }\n\n  static isEqual (reference, object) {\n    return equals(reference, object)\n  }\n\n  static isExistant (object) {\n    return exists(object)\n  }\n\n  element () {\n    return Compare.isElement(this.reference)\n  }\n\n  fragment () {\n    return Compare.isFragment(this.reference)\n  }\n\n  text () {\n    return Compare.isText(this.reference)\n  }\n\n  equal (it) {\n    return Compare.isEqual(this.reference, it)\n  }\n\n  existant () {\n    return Compare.isExistant(this.reference)\n  }\n}\n"]}