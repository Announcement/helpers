{"version":3,"sources":["all.js"],"names":["$toProperty","property","object","add","x","y","allAre","methods","length","toLength","toProperty","toTotal","map","reduce","params","context","update","it","enough","from","fromProxy","args","this","_curry","require","_curry2","default"],"mappings":"qFAEA,SAASA,YAAaC,EAAUC,GAC9B,OAAOA,EAAOD,GAGhB,SAASE,IAATC,EAAAC,GACE,OAAOD,EAAIC,EAKb,SAASC,UAAWC,GAClB,IAAIC,EAEJ,IAAIC,EAAWC,WAAW,UACtBC,EAAUR,IA0Bd,OAxBAK,EAASD,EACNK,IAAIH,GACJI,OAAOF,GAEV,SAAkBG,GAChB,IAAIC,EAEJ,IAAIC,EAASC,GAAMF,GAAWE,EAC1BC,EAAS,IAAMJ,EAAON,OAASA,EAC/BW,EAAO,SAAuBC,EAElC,OAAO,YAAaC,GAMlB,OAHAN,EAAUC,EAAOM,OACPJ,KAAYC,wFAjC5B,IAAAI,OAAAC,QAAA,kDAUA,IAAId,YAAa,EAAAe,QAAAC,SAAM1B,qBAmCL0B,QAAVpB","file":"../lib/all.min.js","sourcesContent":["import curry from './curry'\r\n\r\nfunction $toProperty (property, object) {\r\n  return object[property]\r\n}\r\n\r\nfunction add (x, y) {\r\n  return x + y\r\n}\r\n\r\nlet toProperty = curry($toProperty)\r\n\r\nfunction allAre (...methods) {\r\n  var length\r\n\r\n  let toLength = toProperty('length')\r\n  let toTotal = add\r\n\r\n  length = methods\r\n    .map(toLength)\r\n    .reduce(toTotal)\r\n\r\n  function prepare (params) {\r\n    var context\r\n\r\n    let update = it => context || it\r\n    let enough = () => params.length < length\r\n    let from = () => fromPartial() || fromProxy()\r\n\r\n    return function (...args) {\r\n      var result\r\n\r\n      context = update(this)\r\n      result = !enough() || from()\r\n\r\n      return result\r\n    }\r\n  }\r\n\r\n  function fromPartial () {}\r\n  function fromProxy () {}\r\n\r\n  return prepare([])\r\n}\r\n\r\nexport {allAre as default}\r\n"]}