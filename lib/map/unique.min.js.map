{"version":3,"sources":["unique.js"],"names":["beforeReduce","it","Array","_where","require","_curry","unique","normal","_curry2","default","array","value","filter","_where2","length","index","indexOf","reduce","previous","current","find","push"],"mappings":"qFAGA,SAASA,aAAcC,GACrB,OAAOA,aAAcC,MAAQD,GAAMA,iFAJrC,IAAAE,OAAAC,QAAA,kDACAC,OAAAD,QAAA,kDAUA,IAAIE,QACFC,QAAQ,EAAAC,QAAAC,SAAM,SAAiBC,EAAOC,GACpC,OAAOD,EAAME,QAAO,EAAAC,QAAAJ,SAAME,IAAQG,OAAS,IAG7CF,OAAQ,SAAiBD,EAAOI,EAAOL,GACrC,OAA4C,IAArCA,EAAMM,QAAQL,EAAOI,EAAQ,IAGtCE,OAAQ,SAAiBC,EAAUC,GAOjC,OANAD,EAAWlB,aAAakB,IAEVE,MAAK,EAAAP,QAAAJ,SAAMU,KACvBD,EAASG,KAAKF,GAGTD,YAIQT,QAAVH","file":"../lib/unique.min.js","sourcesContent":["import where from './where'\r\nimport curry from './curry'\r\n\r\nfunction beforeReduce (it) {\r\n  return it instanceof Array ? it : [it]\r\n}\r\n\r\n// normal is the most convenient implementation\r\n// filter is the most efficient implementation\r\n// reduce is the most reliable implementation\r\n\r\nlet unique = {\r\n  normal: curry(function normal (array, value) {\r\n    return array.filter(where(value)).length > 1\r\n  }),\r\n\r\n  filter: function filter (value, index, array) {\r\n    return array.indexOf(value, index + 1) === -1\r\n  },\r\n\r\n  reduce: function reduce (previous, current) {\r\n    previous = beforeReduce(previous)\r\n\r\n    if (!previous.find(where(current))) {\r\n      previous.push(current)\r\n    }\r\n\r\n    return previous\r\n  }\r\n}\r\n\r\nexport { unique as default }\r\n"]}