{"version":3,"file":"where.js","sources":["../src/combine.js","../src/array.js","../src/curry.js","../src/where.js"],"sourcesContent":["/**\r\n * Appends values to an Array,\r\n * but first replaces undefined values before adding to the end\r\n *\r\n * @function combine\r\n *\r\n * @param {Array} array - list of existing items\r\n * @param {Array} values - proposed additions to the lsit\r\n *\r\n * @return {Array} - collective array\r\n */\r\nfunction combine (array, values) {\r\n  let index\r\n\r\n  array = array.concat([])\r\n\r\n  while ((index = array.indexOf(undefined)) !== -1 && values.length > 0) {\r\n    array[index] = values.shift()\r\n  }\r\n\r\n  return array.concat(values)\r\n}\r\n\r\nexport {combine as default}\r\n","/**\r\n * Lazy way of turning an item into an Array\r\n * @function array\r\n *\r\n * @param {Object} it - Array like object\r\n *\r\n * @return {Array} - implicit array object\r\n */\r\nfunction array (it) {\r\n  return Array.prototype.slice.call(it, 0)\r\n}\r\n\r\nexport {array as default}\r\n","import combine from './combine'\r\nimport array from './array'\r\n\r\n/**\r\n * Returns a modified function with lazy option assocations\r\n *\r\n * @function curry\r\n *\r\n * @param {Function} method - function to be curried\r\n *\r\n * @return {Function} curried functions\r\n */\r\nfunction curry (method) {\r\n  /**\r\n  * Generated method through currying, allowing chainibility\r\n  * @function transform\r\n  *\r\n  * @see combine\r\n  * @this\r\n  *\r\n  * @param {Array} params - arguments array\r\n  *\r\n  * @return {Object} piped output from source curry method\r\n  */\r\n  function transform (params) {\r\n    let context\r\n\r\n    return function (...input) {\r\n      let args = combine(params, array(arguments))\r\n\r\n      context = context || this\r\n\r\n      if (args.length < method.length || args.some((it) => it === undefined)) {\r\n        return transform(args)\r\n      } else {\r\n        return method.apply(context, args)\r\n      }\r\n    }\r\n  }\r\n  return method.length <= 1 ? method : transform([])\r\n}\r\n\r\nexport {curry as default}\r\n","import curry from './curry'\r\n/**\r\n * useful inside of a pipeline\r\n * @method where\r\n * @version 3.0.0\r\n *\r\n * @param {Object.<string, string>} search - object with properties to match\r\n *\r\n * @return {boolean}\r\n */\r\nfunction where (reference, object) {\r\n  var keys\r\n  var result\r\n\r\n  let every = key => reference[key] === object[key]\r\n\r\n  keys = Object.keys(reference)\r\n  result = keys.every(every)\r\n\r\n  return result\r\n}\r\n\r\nvar _where = curry(where)\r\n\r\nexport {_where as default}\r\n"],"names":["combine","array","values","index","concat","indexOf","undefined","length","shift","it","Array","prototype","slice","call","curry","method","transform","params","context","input","args","arguments","some","apply","where","reference","object","keys","result","every","key","Object","_where"],"mappings":";;AAAA;;;;;;;;;;;AAWA,SAASA,OAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;MAC3BC,cAAJ;;UAEQF,MAAMG,MAAN,CAAa,EAAb,CAAR;;SAEO,CAACD,QAAQF,MAAMI,OAAN,CAAcC,SAAd,CAAT,MAAuC,CAAC,CAAxC,IAA6CJ,OAAOK,MAAP,GAAgB,CAApE,EAAuE;UAC/DJ,KAAN,IAAeD,OAAOM,KAAP,EAAf;;;SAGKP,MAAMG,MAAN,CAAaF,MAAb,CAAP;CAGF;;ACvBA;;;;;;;;AAQA,SAASD,KAAT,CAAgBQ,EAAhB,EAAoB;SACXC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BJ,EAA3B,EAA+B,CAA/B,CAAP;CAGF;;ACTA;;;;;;;;;AASA,SAASK,KAAT,CAAgBC,MAAhB,EAAwB;;;;;;;;;;;;WAYbC,SAAT,CAAoBC,MAApB,EAA4B;QACtBC,gBAAJ;;WAEO,YAAoB;wCAAPC,KAAO;aAAA;;;UACrBC,OAAOpB,QAAQiB,MAAR,EAAgBhB,MAAMoB,SAAN,CAAhB,CAAX;;gBAEUH,WAAW,IAArB;;UAEIE,KAAKb,MAAL,GAAcQ,OAAOR,MAArB,IAA+Ba,KAAKE,IAAL,CAAU,UAACb,EAAD;eAAQA,OAAOH,SAAf;OAAV,CAAnC,EAAwE;eAC/DU,UAAUI,IAAV,CAAP;OADF,MAEO;eACEL,OAAOQ,KAAP,CAAaL,OAAb,EAAsBE,IAAtB,CAAP;;KARJ;;SAYKL,OAAOR,MAAP,IAAiB,CAAjB,GAAqBQ,MAArB,GAA8BC,UAAU,EAAV,CAArC;CAGF;;ACzCA;;;;;;;;;AASA,SAASQ,KAAT,CAAgBC,SAAhB,EAA2BC,MAA3B,EAAmC;MAC7BC,IAAJ;MACIC,MAAJ;;MAEIC,QAAQ,SAARA,KAAQ;WAAOJ,UAAUK,GAAV,MAAmBJ,OAAOI,GAAP,CAA1B;GAAZ;;SAEOC,OAAOJ,IAAP,CAAYF,SAAZ,CAAP;WACSE,KAAKE,KAAL,CAAWA,KAAX,CAAT;;SAEOD,MAAP;;;AAGF,IAAII,SAASlB,MAAMU,KAAN,CAAb,CAEA;;"}